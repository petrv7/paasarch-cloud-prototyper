<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ parameter type="CloudPrototyper.NET.Framework.v462.Common.Generators.Workers.WorkerMainGenerator" name="Model" #>
using System.Linq;
using System.Threading.Tasks;
using Castle.Windsor;
// Worker entry point
namespace <#= Model.Namespace #> 
{
    public class <#= Model.Name #> 
    {
        public static IWindsorContainer WindsorContainer;
        public static void Main(string[] args)
        {
            WindsorContainer = new WindsorContainer();

            WindsorContainer.Install(new Worker.Utils.Installer());
            var handlers = WindsorContainer.ResolveAll(typeof (<#= Model.MessageBusHandlerInterface.Namespace #>.<#= Model.MessageBusHandlerInterface.Name #>));

            Task.WaitAll(handlers.Cast<<#= Model.MessageBusHandlerInterface.Namespace #>.<#= Model.MessageBusHandlerInterface.Name #>>()
                .Select(handler => Task.Run(() =>
                {
                    handler.OnStart();
                    handler.Run();
                })).ToArray());            
        }
    }
}